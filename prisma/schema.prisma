generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Account {
  id                      String              @id @default(auto()) @map("_id") @db.ObjectId
  kindeId                 String              @unique
  email                   String              @unique
  isOnboarded             Boolean             @default(false)
  onboardingstep          OnboardingStep      @default(ONE)
  profile                 Profile?

  subscription            Subscription?       @relation(fields: [subscriptionId], references: [id])
  subscriptionId          String?             @db.ObjectId
  userNotifications       UserNotification[]

  // Jobs this user (as workscout) has created (applied on behalf of clients)
  createdApplications     JobApplication[]    @relation("workscoutApplications")

  // Jobs this user (as client) is tied to
  receivedApplications    JobApplication[]    @relation("clientApplications")
}

enum OnboardingStep {
  ONE
  TWO
  THREE
  COMPLETED
}

model Profile {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  account    Account  @relation(fields: [accountId], references: [id])
  accountId  String   @unique @db.ObjectId
  name       String
  bio        String
  email      String
  gender     String
  location   String
  salary     String
  jobtitle   String
  document   Document @relation(fields: [documentId], references: [id])
  documentId String   @unique @db.ObjectId
}

model Document {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  contentType String
  data        Bytes
  uploadedAt  DateTime  @default(now())
  Profile     Profile[]
}




model JobApplication {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId

  jobName      String
  category     String
  appliedDate  DateTime
  deadlineDate DateTime   
  bookmarked   Boolean    @default(false)
  status       JobStatus   @default(APPLIED)
  company      String

  // Workscout who created this application
  workscout    Account     @relation("workscoutApplications", fields: [workscoutId], references: [id])
  workscoutId  String      @db.ObjectId

  // Client for whom the application was created
  client       Account     @relation("clientApplications", fields: [clientId], references: [id])
  clientId     String      @db.ObjectId
}




model Subscription {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  plan             Plan    @default(FREE)
  active           Boolean @default(true)
  stripecustomerId String?

  Account Account[]
}

model Notification {
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  title             String
  message           String
  createdAt         DateTime           @default(now())
  userNotifications UserNotification[]
}

model UserNotification {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  notification   Notification @relation(fields: [notificationId], references: [id])
  notificationId String       @db.ObjectId
  account        Account      @relation(fields: [accountId], references: [id])
  accountId      String       @db.ObjectId
  read           Boolean      @default(false)
  receivedAt     DateTime     @default(now())
}

enum Role {
  CLIENT
  WORKSCOUT
  ADMIN
}

enum JobStatus {
  IN_PROGRESS
  SHORTLISTED
  APPLIED
  SUBMITTED
  REJECTED
}

enum Plan {
  FREE
  BASIC
  STANDARD
  PREMIUM
  PRO
}
